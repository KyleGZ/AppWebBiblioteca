@{
    var userEmail = Context.User.Identity.Name;
    // Obtener roles del usuario actual desde los claims
    var userRoles = Context.User.Claims
        .Where(c => c.Type == System.Security.Claims.ClaimTypes.Role)
        .Select(c => c.Value)
        .ToList();
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Biblioteca Esparza</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

    <!-- Stylesheets -->
    <link rel="stylesheet" href="~/css/Style.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/StyleUsuarios.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/StyleHome.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/StyleLibros.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/StylePerfil.css" asp-append-version="true" />


    @await RenderSectionAsync("Styles", required: false)

    <style>
        /* Estilos para el nuevo menú de usuario */
        .user-menu-dropdown .dropdown-menu {
            min-width: 200px;
            padding: 0.5rem 0;
        }

        .user-menu-dropdown .dropdown-item {
            padding: 0.5rem 1rem;
            display: flex;
            align-items: center;
        }

            .user-menu-dropdown .dropdown-item i {
                width: 20px;
                margin-right: 8px;
            }

        .user-menu-dropdown .dropdown-divider {
            margin: 0.3rem 0;
        }

        .user-info-text {
            font-size: 0.9rem;
            color: #6c757d;
        }
    </style>
</head>
<body>
    <div class="main-container">
        <!-- Sidebar -->
        <div class="sidebar" id="sidebar">
            <div class="sidebar-header">
                <a href="@Url.Action("Index", "Home")" class="sidebar-brand">
                    <i class="fas fa-book me-2"></i>
                    <span class="brand-text">BIBLIOTECA ESPARZA</span>
                </a>
                <div class="sidebar-subtitle mt-2">Municipalidad de Esparza</div>
                <div class="sidebar-subtitle">Sistema de Gestión</div>
                <button class="sidebar-close" id="sidebarClose">
                    <i class="fas fa-times"></i>
                </button>
            </div>

            <nav class="sidebar-nav">
                <!-- Inicio - Accesible para todos los usuarios autenticados -->
                <div class="nav-item">
                    <a href="@Url.Action("Index", "Home")" class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Home" ? "active" : "")">
                        <i class="fas fa-home"></i>
                        <span class="nav-text">Inicio</span>
                    </a>
                </div>

                <!-- Mi Perfil - Nueva opción agregada -->
                <div class="nav-item">
                    <a href="@Url.Action("PerfilUsuario", "Usuario")" class="nav-link">
                        <i class="fas fa-user-circle"></i>
                        <span class="nav-text">Mi Perfil</span>
                    </a>
                </div>

                <!-- Menús para todos los usuarios autenticados -->
                <div class="nav-item">
                    <a href="@Url.Action("Index", "Libro")" class="nav-link">
                        <i class="fas fa-book-open"></i>
                        <span class="nav-text">Catálogo de Libros</span>
                    </a>
                </div>

                <div class="nav-item">
                    <a href="#" class="nav-link">
                        <i class="fas fa-user-friends"></i>
                        <span class="nav-text">Socios y Lectores</span>
                    </a>
                </div>

                <div class="nav-item">
                    <a href="#" class="nav-link">
                        <i class="fas fa-exchange-alt"></i>
                        <span class="nav-text">Préstamos y Devoluciones</span>
                    </a>
                </div>

                <!-- Gestión de Usuarios - Solo para Administradores -->
                @if (User.IsInRole("Admin"))
                {
                    <div class="nav-item">
                        <a href="@Url.Action("Index", "Usuario")" class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Usuario" ? "active" : "")">
                            <i class="fas fa-users-cog"></i>
                            <span class="nav-text">Gestión de Usuarios</span>
                            <span class="badge badge-admin ms-2">Admin</span>
                        </a>
                    </div>
                }

                <!-- Actividades Culturales - Para todos -->
                <div class="nav-item">
                    <a href="#" class="nav-link">
                        <i class="fas fa-calendar-alt"></i>
                        <span class="nav-text">Actividades Culturales</span>
                    </a>
                </div>

                <!-- Reportes - Solo para Administradores y Bibliotecarios -->
                @if (User.IsInRole("Administrador") || User.IsInRole("Bibliotecario"))
                {
                    <div class="nav-item">
                        <a href="#" class="nav-link">
                            <i class="fas fa-chart-bar"></i>
                            <span class="nav-text">Reportes Biblioteca</span>
                            @if (User.IsInRole("Administrador"))
                            {
                                <span class="badge badge-admin ms-2">Admin</span>
                            }
                            else
                            {
                                <span class="badge badge-bibliotecario ms-2">Biblio</span>
                            }
                        </a>
                    </div>
                }

                <!-- Menú adicional para Bibliotecarios -->
                @if (User.IsInRole("Bibliotecario"))
                {
                    <div class="nav-item">
                        <a href="#" class="nav-link">
                            <i class="fas fa-tasks"></i>
                            <span class="nav-text">Gestión Inventario</span>
                            <span class="badge badge-bibliotecario ms-2">Biblio</span>
                        </a>
                    </div>
                }
            </nav>
        </div>

        <!-- Overlay para móviles -->
        <div class="sidebar-overlay" id="sidebarOverlay"></div>

        <!-- Contenido Principal -->
        <div class="main-content">
            <!-- Top Bar -->
            <div class="top-bar">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                        <!-- Botón Hamburguesa -->
                        <button class="btn sidebar-toggle me-3" id="sidebarToggle">
                            <i class="fas fa-bars"></i>
                        </button>
                        <h4 class="mb-0 text-dark">
                            @ViewData["PageTitle"]
                        </h4>
                    </div>
                    <div class="user-info">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <!-- Nuevo menú de usuario sin roles visibles -->
                            <div class="dropdown user-menu-dropdown">
                                <button class="btn btn-esparza-outline dropdown-toggle d-flex align-items-center" type="button" data-bs-toggle="dropdown">
                                    <i class="fas fa-user-circle me-2"></i>
                                    <span class="text-dark">@userEmail</span>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li>
                                        <span class="dropdown-item-text user-info-text">
                                            <i class="fas fa-envelope me-1"></i>@userEmail
                                        </span>
                                    </li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("PerfilUsuario", "Usuario")">
                                            <i class="fas fa-user me-1"></i>Perfil
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="#">
                                            <i class="fas fa-envelope me-1"></i>Mensajes
                                            <span class="badge bg-primary rounded-pill ms-2">3</span>
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="#">
                                            <i class="fas fa-cog me-1"></i>Preferencias
                                        </a>
                                    </li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <form asp-controller="Usuario" asp-action="Logout" method="post" class="d-inline">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="dropdown-item text-danger">
                                                <i class="fas fa-sign-out-alt me-1"></i>Cerrar Sesión
                                            </button>
                                        </form>
                                    </li>
                                </ul>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Contenido de la Vista -->
            <div class="container-fluid p-4">
                @RenderBody()
            </div>
        </div>
    </div>

    <!-- Footer -->
    <footer class="py-4 text-center text-white footer-main">
        <div class="container">
            <small>
                <i class="fas fa-book me-1"></i>
                &copy; 2024 Biblioteca Pública de Esparza - Municipalidad de Esparza
            </small>
            @if (User.Identity.IsAuthenticated)
            {
                <div class="mt-1">
                    <small class="text-muted">
                        Usuario: @userEmail |
                        Roles: @string.Join(", ", userRoles)
                    </small>
                </div>
            }
        </div>
    </footer>

    <!-- Modal Global para Mensajes - VERIFICAR QUE ESTÉ PRESENTE -->
    <div class="modal fade" id="globalModal" tabindex="-1" aria-labelledby="globalModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header" id="globalModalHeader">
                    <h5 class="modal-title" id="globalModalLabel">
                        <i class="fas fa-info-circle me-2"></i>
                        <span id="globalModalTitle">Información</span>
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="globalModalBody">
                    <!-- El mensaje se insertará aquí -->
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Container para Toast Notifications -->
    <div id="toastContainer" class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 9999;"></div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Control del sidebar responsivo
        document.addEventListener('DOMContentLoaded', function() {
            const sidebar = document.getElementById('sidebar');
            const sidebarToggle = document.getElementById('sidebarToggle');
            const sidebarClose = document.getElementById('sidebarClose');
            const sidebarOverlay = document.getElementById('sidebarOverlay');

            function toggleSidebar() {
                sidebar.classList.toggle('active');
                sidebarOverlay.classList.toggle('active');
            }

            function closeSidebar() {
                sidebar.classList.remove('active');
                sidebarOverlay.classList.remove('active');
            }

            sidebarToggle.addEventListener('click', toggleSidebar);
            sidebarClose.addEventListener('click', closeSidebar);
            sidebarOverlay.addEventListener('click', closeSidebar);

            // Cerrar sidebar al hacer clic en un enlace (en móviles)
            const navLinks = document.querySelectorAll('.sidebar-nav .nav-link');
            navLinks.forEach(link => {
                link.addEventListener('click', function() {
                    if (window.innerWidth <= 768) {
                        closeSidebar();
                    }
                });
            });

            // Ajustar sidebar en resize
            window.addEventListener('resize', function() {
                if (window.innerWidth > 768) {
                    sidebar.classList.remove('active');
                    sidebarOverlay.classList.remove('active');
                }
            });
        });

             function showGlobalModal(title, message, type = 'info') {
            console.log('showGlobalModal llamado:', { title, message, type });

            const modalElement = document.getElementById('globalModal');
            if (!modalElement) {
                console.error('Modal global no encontrado en el DOM');
                alert('Error: ' + message); // Fallback
                return;
            }

            const modal = new bootstrap.Modal(modalElement);
            const modalHeader = document.getElementById('globalModalHeader');
            const modalTitle = document.getElementById('globalModalTitle');
            const modalBody = document.getElementById('globalModalBody');

            // Resetear clases
            modalHeader.className = 'modal-header';
            modalHeader.classList.add(type);

            // Configurar título y mensaje
            modalTitle.textContent = title;
            modalBody.innerHTML = message;

            // Configurar icono según tipo
            const iconClass = getModalIconClass(type);
            modalTitle.innerHTML = `<i class="fas ${iconClass} me-2"></i>${title}`;

            console.log('Mostrando modal global');
            modal.show();
        }

        function getModalIconClass(type) {
            const icons = {
                'success': 'fa-check-circle',
                'error': 'fa-exclamation-triangle',
                'warning': 'fa-exclamation-circle',
                'info': 'fa-info-circle'
            };
            return icons[type] || 'fa-info-circle';
        }

        // Funciones rápidas para casos comunes
        function showSuccess(message, title = 'Éxito') {
            console.log('showSuccess llamado:', message);
            showGlobalModal(title, message, 'success');
        }

        function showError(message, title = 'Error') {
            console.log('showError llamado:', message);
            showGlobalModal(title, message, 'error');
        }

        function showWarning(message, title = 'Advertencia') {
            showGlobalModal(title, message, 'warning');
        }

        // Función de prueba - EJECUTAR EN CONSOLA
        window.testModal = function() {
            showSuccess('¡Este es un mensaje de prueba!');
        }



    </script>

    <!-- Scripts específicos de cada vista -->
    @await RenderSectionAsync("Scripts", required: false)

</body>
</html></html>